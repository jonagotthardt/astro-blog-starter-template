---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import CookieBanner from '../components/CookieBanner.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, updatedDate, heroImage } = Astro.props;
const pubDate = new Date("2025-08-13");
---

<html lang="en">
<head>
    <BaseHead title={title} description={description} />
    <style>
        /* Hintergrund wie auf der Home Page */
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(120deg, #0f0c29, #302b63, #24243e);
            color: #ffffff;
            overflow-x: hidden;
        }

        /* Fade-in Effekt */
        main, header, footer {
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 1.2s ease forwards;
        }

        main {
            animation-delay: 0.3s;
        }

        footer {
            animation-delay: 0.6s;
        }

        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .particles {
            position: fixed;
            top:0;
            left:0;
            width:100%;
            height:100%;
            pointer-events: none;
            z-index: 0;
        }

        main {
            width: calc(100% - 2em);
            max-width: 100%;
            margin: 0;
            position: relative;
            z-index: 1;
        }

        .hero-image {
            width: 100%;
            text-align: center;
        }

        .hero-image img {
            display: block;
            margin: 0 auto;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.5);
        }

        .prose {
            width: 720px;
            max-width: calc(100% - 2em);
            margin: auto;
            padding: 1em;
            color: #e0e0e0;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 12px;
            backdrop-filter: blur(6px);
        }

        .title {
            margin-bottom: 1em;
            padding: 1em 0;
            text-align: center;
            line-height: 1.2;
        }

        .title h1 {
            margin: 0 0 0.5em 0;
            font-size: 2.5rem;
            background: linear-gradient(90deg, #00f2ff, #ff00f2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .date {
            margin-bottom: 0.5em;
            color: #b0b0b0;
        }

        .last-updated-on {
            font-style: italic;
        }
    </style>
</head>

<body>
    <!-- Sterne-Hintergrund -->
    <div class="particles" id="particles"></div>

    <Header />

    <main>
        <article>
            <div class="hero-image">
                {heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
            </div>
            <div class="prose">
                <div class="title">
                    <div class="date">
                        <FormattedDate date={pubDate} />
                        {
                            updatedDate && (
                                <div class="last-updated-on">
                                    Last updated on <FormattedDate date={updatedDate} />
                                </div>
                            )
                        }
                    </div>
                    <h1>{title}</h1>
                    <hr />
                </div>
                <slot />
            </div>
        </article>
    </main>

    <Footer />
    <CookieBanner />  

    <!-- Particles Script -->
    <script>
        const canvas = document.createElement('canvas');
        document.getElementById('particles').appendChild(canvas);
        const ctx = canvas.getContext('2d');
        let w = canvas.width = window.innerWidth;
        let h = canvas.height = window.innerHeight;

        let particles = [];
        for (let i = 0; i < 100; i++) {
            particles.push({
                x: Math.random() * w,
                y: Math.random() * h,
                r: Math.random() * 3 + 1,
                d: Math.random() * 1
            });
        }

        function draw() {
            ctx.clearRect(0, 0, w, h);
            ctx.fillStyle = 'rgba(0,255,255,0.7)';
            ctx.beginPath();
            for (let i = 0; i < particles.length; i++) {
                let p = particles[i];
                ctx.moveTo(p.x, p.y);
                ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2, true);
            }
            ctx.fill();
            update();
        }

        function update() {
            for (let i = 0; i < particles.length; i++) {
                let p = particles[i];
                p.y += 0.2;
                if (p.y > h) {
                    p.y = 0;
                    p.x = Math.random() * w;
                }
            }
        }

        setInterval(draw, 30);
        window.addEventListener('resize', () => {
            w = canvas.width = window.innerWidth;
            h = canvas.height = window.innerHeight;
        });
    </script>
</body>
</html>